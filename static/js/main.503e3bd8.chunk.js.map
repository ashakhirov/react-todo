{"version":3,"sources":["webpack:///./src/components/header/header.styles.tsx","webpack:///./src/components/text-input/text-input.styles.tsx","webpack:///./src/components/text-input/text-input.tsx","webpack:///./src/components/header/header.tsx","webpack:///./src/components/main/main.styles.tsx","webpack:///./src/components/todo-item/todo-item.styles.tsx","webpack:///./src/components/todo-item/todo-item.tsx","webpack:///./src/components/todo-list/todo-list.tsx","webpack:///./src/components/toggle-todos-input/toggle-todos-input.styles.tsx","webpack:///./src/components/toggle-todos-input/toggle-todos-input.tsx","webpack:///./src/components/main/main.tsx","webpack:///./src/components/footer/footer.styles.tsx","webpack:///./src/components/counter/counter.styles.tsx","webpack:///./src/components/counter/counter.tsx","webpack:///./src/components/filters/filters.styles.tsx","webpack:///./src/components/filters/filters.tsx","webpack:///./src/components/clear-button/clear-button.styles.tsx","webpack:///./src/components/clear-button/clear-button.tsx","webpack:///./src/components/footer/footer.tsx","webpack:///./src/App.tsx","webpack:///./src/index.tsx"],"names":["Title","styled","h1","StyledInput","input","TextInput","onAddTodo","useState","value","setValue","type","onKeyDown","event","key","onChange","target","placeholder","Header","Wrapper","main","Input","props","completed","Label","label","Button","button","Li","li","TodoItem","todo","onClickToggleTodo","onClickDeleteTodo","id","onClick","TodoList","todos","onToggleTodo","onDeleteTodo","map","ToggleTodosInput","onToggleTodos","htmlFor","Main","StyledFooter","footer","span","Counter","count","filter","length","ul","Filter","SelectedAnchor","a","Filters","onFilterChange","links","name","isActive","href","ClearButton","onClearCompleted","Footer","isTodoCompleted","some","App","todosFromStorage","localStorage","getItem","JSON","parse","getTodos","setTodos","setFilter","putTodosInStorage","setItem","stringify","toggleProperty","isCompleted","prevTodos","newTodos","filteredTodos","filterTodos","trim","push","index","findIndex","isAllCompleted","every","uncompletedTodos","preventDefault","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.503e3bd8.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Title = styled.h1`\r\n  position: absolute;\r\n  top: -9.6rem;\r\n  width: 100%;\r\n  margin: 4.3rem 0;\r\n  font-size: 7.1rem;\r\n  font-weight: 400;\r\n  text-align: center;\r\n  color: rgba(138, 24, 24, 0.28);\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledInput = styled.input`\r\n  position: relative;\r\n  width: 100%;\r\n  margin: 0;\r\n  font-family: inherit;\r\n  font-size: 1.7rem;\r\n  font-weight: inherit;\r\n  line-height: 1.4em;\r\n  border: none;\r\n  padding: 1.1rem 1.1rem 1.1rem 4.3rem;\r\n  color: inherit;\r\n  background: rgba(0, 0, 0, 0.003);\r\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\r\n\r\n  &::placeholder {\r\n    font-weight: 400;\r\n    font-style: italic;\r\n    color: #a6a6a6;\r\n  }\r\n`;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { StyledInput } from \"./text-input.styles\";\r\n\r\ntype TextInputProps = {\r\n  onAddTodo(event: React.KeyboardEvent<HTMLInputElement>, value: string): void;\r\n};\r\n\r\nconst TextInput: React.FC<TextInputProps> = ({ onAddTodo }) => {\r\n  const [value, setValue] = useState(\"\");\r\n\r\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.key === \"Enter\") {\r\n      onAddTodo(event, value);\r\n      setValue(\"\");\r\n    }\r\n  };\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue((event.target as HTMLInputElement).value);\r\n  };\r\n\r\n  return (\r\n    <StyledInput\r\n      type=\"text\"\r\n      value={value}\r\n      onKeyDown={handleKeyDown}\r\n      onChange={handleChange}\r\n      placeholder=\"What needs to be done?\"\r\n    />\r\n  );\r\n};\r\n\r\nexport default TextInput;\r\n","import React from \"react\";\r\n\r\nimport { Title } from \"./header.styles\";\r\nimport TextInput from \"../text-input/text-input\";\r\n\r\ntype HeaderProps = {\r\n  onAddTodo(event: React.KeyboardEvent<HTMLInputElement>, value: string): void;\r\n};\r\n\r\nconst Header: React.FC<HeaderProps> = ({ onAddTodo }) => {\r\n  return (\r\n    <header>\r\n      <Title>todos</Title>\r\n      <TextInput onAddTodo={onAddTodo} />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.main`\r\n  position: relative;\r\n  border-top: 1px solid #e6e6e6;\r\n  z-index: 2;\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\ntype Props = {\r\n  completed: boolean;\r\n};\r\n\r\nexport const Input = styled.input`\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  width: 2.9rem;\r\n  height: 2.9rem;\r\n  margin: auto 0;\r\n  border: none;\r\n  text-align: center;\r\n  background: none;\r\n  opacity: 0;\r\n\r\n  &:checked + label,\r\n  & + label {\r\n    background-image: ${(props: Props) =>\r\n      props.completed\r\n        ? 'url(\"data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E\")'\r\n        : \"\"};\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  display: block;\r\n  line-height: 1.2;\r\n  padding: 1.07rem 1.07rem 1.07rem 4.3rem;\r\n  transition: color 0.4s;\r\n  background-image: url(\"data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E\");\r\n  background-repeat: no-repeat;\r\n  background-position: center left;\r\n  word-break: break-all;\r\n\r\n  color: ${(props: Props) => (props.completed ? \"#d9d9d9\" : \"\")};\r\n  text-decoration: ${(props: Props) => (props.completed ? \"line-through\" : \"\")};\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  display: none;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 10px;\r\n  bottom: 0;\r\n  width: 40px;\r\n  height: 40px;\r\n  margin: auto 0;\r\n  font-size: 30px;\r\n  color: #cc9a9a;\r\n  margin-bottom: 11px;\r\n  transition: color 0.2s ease-out;\r\n  cursor: pointer;\r\n\r\n  &::after {\r\n    content: \"×\";\r\n  }\r\n`;\r\n\r\nexport const Li = styled.li`\r\n  position: relative;\r\n  font-size: 1.7rem;\r\n  border-bottom: 1px solid #ededed;\r\n\r\n  &:hover ${Button} {\r\n    display: block;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Li, Input, Label, Button } from \"./todo-item.styles\";\r\nimport { Todo } from \"../../App\";\r\n\r\ntype TodoItemProps = {\r\n  todo: Todo;\r\n  onClickToggleTodo(id: number): void;\r\n  onClickDeleteTodo(id: number): void;\r\n};\r\n\r\nconst TodoItem: React.FC<TodoItemProps> = ({ todo, onClickToggleTodo, onClickDeleteTodo }) => {\r\n  const { id, label, completed } = todo;\r\n\r\n  return (\r\n    <Li>\r\n      <div>\r\n        <Input type=\"checkbox\" completed={completed} onClick={() => onClickToggleTodo(id)} />\r\n        <Label completed={completed}>{label}</Label>\r\n        <Button type=\"button\" onClick={() => onClickDeleteTodo(id)} />\r\n      </div>\r\n    </Li>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import React from \"react\";\r\n\r\nimport TodoItem from \"../todo-item/todo-item\";\r\nimport { Todos } from \"../../App\";\r\n\r\ntype TodoListProps = {\r\n  todos: Todos;\r\n  onToggleTodo(id: number): void;\r\n  onDeleteTodo(id: number): void;\r\n};\r\n\r\nconst TodoList: React.FC<TodoListProps> = ({ todos, onToggleTodo, onDeleteTodo }) => {\r\n  return (\r\n    <ul>\r\n      {[...todos].map(todo => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          onClickToggleTodo={onToggleTodo}\r\n          onClickDeleteTodo={onDeleteTodo}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Input = styled.input`\r\n  position: absolute;\r\n  text-align: center;\r\n  border: none;\r\n  opacity: 0;\r\n  background: none;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  position: absolute;\r\n  top: -3.71rem;\r\n  left: -0.93rem;\r\n  width: 4.29rem;\r\n  height: 2.43rem;\r\n  font-size: 0;\r\n  transform: rotate(90deg);\r\n  cursor: pointer;\r\n\r\n  &::before {\r\n    content: \"❯\";\r\n    padding: 0.71rem 1.93rem;\r\n    font-size: 1.57rem;\r\n    color: #a6a6a6;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Input, Label } from \"./toggle-todos-input.styles\";\r\n\r\ntype ToggleTodosInputProps = {\r\n  onToggleTodos(): void;\r\n};\r\n\r\nconst ToggleTodosInput: React.FC<ToggleTodosInputProps> = ({ onToggleTodos }) => {\r\n  return (\r\n    <>\r\n      <Input id=\"toggle-all\" type=\"checkbox\" onChange={onToggleTodos} />\r\n      <Label htmlFor=\"toggle-all\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ToggleTodosInput;\r\n","import React from \"react\";\r\n\r\nimport { Wrapper } from \"./main.styles\";\r\n\r\nimport TodoList from \"../todo-list/todo-list\";\r\nimport ToggleTodosInput from \"../toggle-todos-input/toggle-todos-input\";\r\nimport { Todos } from \"../../App\";\r\n\r\ntype MainProps = {\r\n  todos: Todos;\r\n  onToggleTodo(id: number): void;\r\n  onDeleteTodo(id: number): void;\r\n  onToggleTodos(): void;\r\n};\r\n\r\nconst Main: React.FC<MainProps> = ({ todos, onToggleTodo, onDeleteTodo, onToggleTodos }) => {\r\n  return (\r\n    <Wrapper>\r\n      <ToggleTodosInput onToggleTodos={onToggleTodos} />\r\n      <TodoList todos={todos} onToggleTodo={onToggleTodo} onDeleteTodo={onDeleteTodo} />\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Main;\r\n","import styled from \"styled-components\";\r\n\r\nexport const StyledFooter = styled.footer`\r\n  min-height: 2.93rem;\r\n  padding: 0.7rem 1.07rem;\r\n  text-align: center;\r\n  color: #777;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    height: 3.57rem;\r\n    overflow: hidden;\r\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 8px 0 -3px #f6f6f6,\r\n      0 9px 1px -3px rgba(0, 0, 0, 0.2), 0 16px 0 -6px #f6f6f6, 0 17px 2px -6px rgba(0, 0, 0, 0.2);\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.span`\r\n  float: left;\r\n  text-align: left;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Wrapper } from \"./counter.styles\";\r\nimport { Todos } from \"../../App\";\r\n\r\ntype TodoCountProps = {\r\n  todos: Todos;\r\n};\r\n\r\nconst Counter: React.FC<TodoCountProps> = ({ todos }) => {\r\n  const count = todos.filter(({ completed }) => !completed).length;\r\n\r\n  return (\r\n    <Wrapper>\r\n      <strong>{count}</strong>\r\n      <span>&nbsp;</span>\r\n      <span>{count > 1 ? \"items\" : \"item\"}</span>\r\n      <span>&nbsp;</span>\r\n      <span>left</span>\r\n    </Wrapper>\r\n  );\r\n};\r\n\r\nexport default Counter;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Wrapper = styled.ul`\r\n  position: absolute;\r\n  right: 0;\r\n  left: 0;\r\n`;\r\n\r\nexport const Filter = styled.li`\r\n  display: inline;\r\n`;\r\n\r\nexport const SelectedAnchor = styled.a`\r\n  margin: 0.21rem;\r\n  border: 1px solid transparent;\r\n  padding: 0.21rem 0.5rem;\r\n  border-radius: 3px;\r\n  border-color: rgba(255, 41, 5, 0.29);\r\n  background-color: transparent;\r\n  color: inherit;\r\n  text-decoration: none;\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { SelectedAnchor, Filter, Wrapper } from \"./filters.styles\";\r\n\r\ntype FiltersProps = {\r\n  filter: string;\r\n  onFilterChange(event: React.MouseEvent<HTMLAnchorElement>, filter: string): void;\r\n};\r\n\r\nconst Filters: React.FC<FiltersProps> = ({ filter, onFilterChange }) => {\r\n  const linkTemplates = [\r\n    { name: \"all\", label: \"All\" },\r\n    { name: \"active\", label: \"Active\" },\r\n    { name: \"completed\", label: \"Completed\" }\r\n  ];\r\n\r\n  const links = linkTemplates.map(({ name, label }) => {\r\n    const isActive = filter === name;\r\n\r\n    return (\r\n      <Filter key={name}>\r\n        {isActive ? (\r\n          <SelectedAnchor>{label}</SelectedAnchor>\r\n        ) : (\r\n          <a href=\"#/\" onClick={event => onFilterChange(event, name)}>\r\n            {label}\r\n          </a>\r\n        )}\r\n      </Filter>\r\n    );\r\n  });\r\n\r\n  return <Wrapper>{links}</Wrapper>;\r\n};\r\n\r\nexport default Filters;\r\n","import styled from \"styled-components\";\r\n\r\nexport const Button = styled.button`\r\n  float: right;\r\n  position: relative;\r\n  line-height: 20px;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n\r\n  &:hover {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n","import React from \"react\";\r\n\r\nimport { Button } from \"./clear-button.styles\";\r\n\r\ntype ClearButtonProps = {\r\n  onClearCompleted(): void;\r\n};\r\n\r\nconst ClearButton: React.FC<ClearButtonProps> = ({ onClearCompleted }) => (\r\n  <Button type=\"button\" onClick={onClearCompleted}>\r\n    Clear completed\r\n  </Button>\r\n);\r\n\r\nexport default ClearButton;\r\n","import React from \"react\";\r\n\r\nimport { StyledFooter } from \"./footer.styles\";\r\n\r\nimport Counter from \"../counter/counter\";\r\nimport Filters from \"../filters/filters\";\r\nimport ClearButton from \"../clear-button/clear-button\";\r\nimport { Todos } from \"../../App\";\r\n\r\ntype FooterProps = {\r\n  todos: Todos;\r\n  filter: string;\r\n  onClearCompleted(): void;\r\n  onFilterChange(event: React.MouseEvent<HTMLAnchorElement>, filter: string): void;\r\n};\r\n\r\nconst Footer: React.FC<FooterProps> = ({ todos, filter, onClearCompleted, onFilterChange }) => {\r\n  const isTodoCompleted = todos.some(todo => todo.completed === true);\r\n\r\n  return (\r\n    <StyledFooter>\r\n      <Counter todos={todos} />\r\n      <Filters filter={filter} onFilterChange={onFilterChange} />\r\n      {isTodoCompleted && <ClearButton onClearCompleted={onClearCompleted} />}\r\n    </StyledFooter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState } from \"react\";\r\n\r\nimport Header from \"./components/header/header\";\r\nimport Main from \"./components/main/main\";\r\nimport Footer from \"./components/footer/footer\";\r\n\r\nexport type Todo = {\r\n  id: number;\r\n  label: string;\r\n  completed: boolean;\r\n};\r\n\r\nexport type Todos = Todo[] | [];\r\n\r\nconst App = () => {\r\n  const getTodos = () => {\r\n    const todos = localStorage.getItem(\"todos\");\r\n\r\n    if (todos) {\r\n      return JSON.parse(todos);\r\n    }\r\n\r\n    return [];\r\n  };\r\n\r\n  const todosFromStorage = getTodos();\r\n\r\n  const [todos, setTodos] = useState<Todos>(todosFromStorage);\r\n  const [filter, setFilter] = useState(\"all\");\r\n\r\n  const putTodosInStorage = (todos: Todos) => {\r\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\r\n  };\r\n\r\n  const handleAddTodo = (event: React.KeyboardEvent<HTMLInputElement>, value: string) => {\r\n    if (event.key === \"Enter\" && value.trim()) {\r\n      const todo: Todo = {\r\n        id: todos.length + 1,\r\n        label: value.trim(),\r\n        completed: false\r\n      };\r\n\r\n      setTodos(prevTodos => [...prevTodos, todo]);\r\n\r\n      todosFromStorage.push(todo);\r\n      putTodosInStorage(todosFromStorage);\r\n    }\r\n  };\r\n\r\n  const handleToggleTodo = (id: number) => {\r\n    setTodos(prevTodos => {\r\n      const todos = [...prevTodos];\r\n      const index = todos.findIndex(todo => todo.id === id);\r\n      const todo = { ...todos[index] };\r\n\r\n      todo.completed = !todo.completed;\r\n      todos[index] = todo;\r\n      putTodosInStorage(todos);\r\n\r\n      return todos;\r\n    });\r\n  };\r\n\r\n  const handleDeleteTodo = (id: number) => {\r\n    setTodos(prevTodos => {\r\n      const filteredTodos = prevTodos.filter(todo => todo.id !== id);\r\n      putTodosInStorage(filteredTodos);\r\n      return filteredTodos;\r\n    });\r\n  };\r\n\r\n  const toggleProperty = (isCompleted: boolean) => {\r\n    setTodos(prevTodos => {\r\n      const newTodos = [...prevTodos].map(({ id, label }) => ({\r\n        completed: isCompleted,\r\n        id,\r\n        label\r\n      }));\r\n\r\n      putTodosInStorage(newTodos);\r\n      return newTodos;\r\n    });\r\n  };\r\n\r\n  const handlerToggleTodos = () => {\r\n    const isAllCompleted = todos.every(todo => todo.completed === true);\r\n\r\n    if (isAllCompleted) {\r\n      toggleProperty(!isAllCompleted);\r\n    } else {\r\n      toggleProperty(!isAllCompleted);\r\n    }\r\n  };\r\n\r\n  const handleClearCompleted = () => {\r\n    setTodos(prevTodos => {\r\n      const uncompletedTodos = prevTodos.filter(todo => !todo.completed);\r\n      putTodosInStorage(uncompletedTodos);\r\n      return uncompletedTodos;\r\n    });\r\n  };\r\n\r\n  const handleFilterChange = (event: React.MouseEvent<HTMLAnchorElement>, filter: string) => {\r\n    event.preventDefault();\r\n    setFilter(filter);\r\n  };\r\n\r\n  const filterTodos = (todos: Todos, filter: string) => {\r\n    switch (filter) {\r\n      case \"active\":\r\n        return todos.filter(todo => !todo.completed);\r\n      case \"completed\":\r\n        return todos.filter(todo => todo.completed);\r\n      default:\r\n        return todos;\r\n    }\r\n  };\r\n\r\n  const filteredTodos = filterTodos(todos, filter);\r\n\r\n  return (\r\n    <div>\r\n      <Header onAddTodo={handleAddTodo} />\r\n      {todos.length > 0 && (\r\n        <>\r\n          <Main\r\n            todos={filteredTodos}\r\n            onToggleTodo={handleToggleTodo}\r\n            onDeleteTodo={handleDeleteTodo}\r\n            onToggleTodos={handlerToggleTodos}\r\n          />\r\n          <Footer\r\n            todos={filteredTodos}\r\n            filter={filter}\r\n            onClearCompleted={handleClearCompleted}\r\n            onFilterChange={handleFilterChange}\r\n          />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}