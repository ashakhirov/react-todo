{"version":3,"sources":["webpack:///./src/global-styles.ts","webpack:///./src/components/clear-button/styles.ts","webpack:///./src/components/clear-button/index.tsx","webpack:///./src/components/counter/styles.ts","webpack:///./src/components/counter/index.tsx","webpack:///./src/components/filters/styles.ts","webpack:///./src/components/filters/index.tsx","webpack:///./src/components/footer/styles.ts","webpack:///./src/components/footer/index.tsx","webpack:///./src/components/header/styles.ts","webpack:///./src/components/text-input/styles.ts","webpack:///./src/components/text-input/index.tsx","webpack:///./src/components/header/index.tsx","webpack:///./src/components/main/styles.ts","webpack:///./src/components/todo-item/styles.ts","webpack:///./src/components/todo-item/index.tsx","webpack:///./src/components/todo-list/index.tsx","webpack:///./src/components/toggle-input/styles.tsx","webpack:///./src/components/toggle-input/index.tsx","webpack:///./src/components/main/index.tsx","webpack:///./src/index.tsx","webpack:///./src/app.tsx","webpack:///./src/hooks/useLocalStorageState.ts"],"names":["GlobalStyles","createGlobalStyle","Button","styled","button","ClearButton","onClearCompleted","type","onClick","Wrapper","span","Counter","todos","count","useMemo","filter","completed","length","ul","Filter","li","SelectedAnchor","a","Filters","onFilterChange","links","name","label","map","isActive","key","href","event","StyledFooter","footer","Footer","isTodoCompleted","some","todo","Title","h1","StyledInput","input","TextInput","onAddTodo","useState","value","setValue","inputRef","useRef","useEffect","current","focus","onSubmit","preventDefault","trim","ref","onChange","target","placeholder","Header","main","EditInput","div","Li","editable","css","Input","Label","TodoItem","id","onClickToggleTodo","onClickDeleteTodo","onEditTodo","setEditable","editInputRef","onDoubleClick","checked","prevTodos","newTodos","index","findIndex","onBlur","onKeyDown","which","TodoList","onToggleTodo","onDeleteTodo","ToggleInput","onToggleTodos","htmlFor","Main","render","defaultValue","getLocalStorageState","JSON","parse","localStorage","getItem","stringify","state","setState","setItem","useLocalStorageState","setTodos","setFilter","toggleProperty","isCompleted","filteredTodos","filterTodos","todoText","isAllCompleted","every","document","getElementById"],"mappings":"wrJAEO,IAAMA,EAAeC,YAAH,K,k0BCAlB,IAAMC,EAASC,IAAOC,OAAV,KCMNC,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,iBAAH,OACzB,kBAACJ,EAAD,CAAQK,KAAK,SAASC,QAASF,GAA/B,oB,iNCPK,IAAMG,EAAUN,IAAOO,KAAV,KCOPC,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,MAClBC,EAAQC,mBAAQ,kBAAMF,EAAMG,QAAO,qBAAGC,aAA4BC,SAAQ,CAACL,IAEjF,OACE,kBAACH,EAAD,KACE,gCAASI,GACT,sCACA,8BAAOA,EAAQ,EAAI,QAAU,QAC7B,sCACA,wC,soBChBC,IAAMJ,EAAUN,IAAOe,GAAV,KAMPC,EAAShB,IAAOiB,GAAV,KAINC,EAAiBlB,IAAOmB,EAAV,KCHdC,EAAU,SAAC,GAAuC,IAArCR,EAAoC,EAApCA,OAAQS,EAA4B,EAA5BA,eAO1BC,EANgB,CACpB,CAAEC,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,SAAUC,MAAO,UACzB,CAAED,KAAM,YAAaC,MAAO,cAGFC,KAAI,YAAsB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACjCE,EAAWd,IAAWW,EAE5B,OACE,kBAACP,EAAD,CAAQW,IAAKJ,GACVG,EACC,kBAACR,EAAD,KAAiBM,GAEjB,uBAAGI,KAAK,KAAKvB,QAAS,SAACwB,GAAD,OAAWR,EAAeQ,EAAON,KACpDC,OAOX,OAAO,kBAAC,EAAD,KAAUF,I,kqBC9BZ,IAAMQ,EAAe9B,IAAO+B,OAAV,KCcZC,EAAS,SAAC,GAAgE,IAA9DvB,EAA6D,EAA7DA,MAAOG,EAAsD,EAAtDA,OAAQT,EAA8C,EAA9CA,iBAAkBkB,EAA4B,EAA5BA,eAClDY,EAAkBxB,EAAMyB,MAAK,SAACC,GAAD,OAA6B,IAAnBA,EAAKtB,aAElD,OACE,kBAACiB,EAAD,KACE,kBAAC,EAAD,CAASrB,MAAOA,IAChB,kBAAC,EAAD,CAASG,OAAQA,EAAQS,eAAgBA,IACxCY,GAAmB,kBAAC,EAAD,CAAa9B,iBAAkBA,M,8VCrBlD,IAAMiC,EAAQpC,IAAOqC,GAAV,K,4nBCAX,IAAMC,EAActC,IAAOuC,MAAV,K,sfCMjB,IAAMC,EAAY,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAuB,IACvBC,mBAAS,IADc,GAC1CC,EAD0C,KACnCC,EADmC,KAG3CC,EAAWC,iBAAgC,MAEjDC,qBAAU,WACJF,GAAYA,EAASG,SACvBH,EAASG,QAAQC,UAElB,IAaH,OACE,0BAAMC,SAZa,SAACrB,GACpBA,EAAMsB,iBACNV,EAAUE,EAAMS,QAChBR,EAAS,MAUP,kBAACN,EAAD,CACEe,IAAKR,EACLzC,KAAK,OACLuC,MAAOA,EACPW,SAXe,SAACzB,GAAgD,IAC5Dc,EAAUd,EAAM0B,OAAhBZ,MACRC,EAASD,IAULa,YAAY,6BC5BPC,EAAS,SAAC,GAA0B,IAAxBhB,EAAuB,EAAvBA,UACvB,OACE,gCACE,kBAACL,EAAD,cACA,kBAAC,EAAD,CAAWK,UAAWA,M,oPCXrB,IAAMnC,EAAUN,IAAO0D,KAAV,K,04ECIb,IAAM3D,EAASC,IAAOC,OAAV,KAoBN0D,EAAY3D,IAAOuC,MAAV,KAkBTjC,EAAUN,IAAO4D,IAAV,KAIPC,EAAK7D,IAAOiB,GAAV,IAKJlB,GAQP,qBAAG+D,UAEHC,YADQ,IAMFzD,EAIAqD,MAQGK,EAAQhE,IAAOuC,MAAV,KAcM,qBAAG1B,WAErB,6ZAIOoD,EAAQjE,IAAOwB,MAAV,KAUP,qBAAGX,WAA6B,aACtB,qBAAGA,WAA6B,kB,iqCCnGrD,IAGaqD,GAAW,SAAC,GAKX,IAAD,IAJX/B,KAAQgC,EAIG,EAJHA,GAAI3C,EAID,EAJCA,MAAOX,EAIR,EAJQA,UACnBuD,EAGW,EAHXA,kBACAC,EAEW,EAFXA,kBACAC,EACW,EADXA,WACW,IACe5B,mBAASlB,GADxB,GACJmB,EADI,KACGC,EADH,SAEqBF,oBAAS,GAF9B,GAEJoB,EAFI,KAEMS,EAFN,KAILC,EAAe1B,iBAAgC,MAErDC,qBAAU,WACJyB,EAAaxB,SAAWc,GAC1BU,EAAaxB,QAAQC,UAEtB,CAACa,IA6BJ,OACE,kBAACD,EAAD,CAAIC,SAAUA,EAAUW,cAfA,WACxBF,GAAY,KAeV,kBAAC,EAAD,KACE,kBAACP,EAAD,CACE5D,KAAK,WACLsE,QAAS7D,EACTA,UAAWA,EACXyC,SAAU,kBAAMc,EAAkBD,MAEpC,kBAACF,EAAD,CAAOpD,UAAWA,GAAYW,GAC9B,kBAAC,EAAD,CAAQpB,KAAK,SAASC,QAAS,kBAAMgE,EAAkBF,OAEzD,kBAACR,EAAD,CACEN,IAAKmB,EACLpE,KAAK,OACLuC,MAAOA,EACPW,SA3Ce,SAACzB,GAAgD,IAC5Dc,EAAUd,EAAM0B,OAAhBZ,MACRC,EAASD,GACT2B,GAAW,SAACK,GACV,IAAMC,EAAQ,EAAOD,GACfE,EAAQD,EAASE,WAAU,SAAC3C,GAAD,OAAUA,EAAKgC,KAAOA,KACjDhC,E,+VAAI,IAAQyC,EAASC,IAG3B,OAFA1C,EAAKX,MAAQmB,EACbiC,EAASC,GAAS1C,EACXyC,MAmCLG,OA3Ba,WACjBR,GAAY,IA2BRS,UAxBgB,SAACnD,GAxCP,KAyCVA,EAAMoD,OA1CE,KA0CqBpD,EAAMoD,OACrCV,GAAY,QC3CLW,GAAW,SAAC,GAA8D,IAA5DzE,EAA2D,EAA3DA,MAAO0E,EAAoD,EAApDA,aAAcC,EAAsC,EAAtCA,aAAcd,EAAwB,EAAxBA,WAC5D,OACE,4BACG7D,EAAMgB,KAAI,SAACU,GAAD,OACT,kBAAC,GAAD,CACER,IAAKQ,EAAKgC,GACVhC,KAAMA,EACNiC,kBAAmBe,EACnBd,kBAAmBe,EACnBd,WAAYA,S,qnBCnBf,IAAMN,GAAQhE,IAAOuC,MAAV,MAQL0B,GAAQjE,IAAOwB,MAAV,MCFL6D,GAAc,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,cAC5B,OACE,oCACE,kBAAC,GAAD,CAAOnB,GAAG,aAAa/D,KAAK,WAAWkD,SAAUgC,IACjD,kBAAC,GAAD,CAAOC,QAAQ,iBCIRC,GAAO,SAAC,GAA6E,IAA3E/E,EAA0E,EAA1EA,MAAO0E,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,aAAcE,EAAuC,EAAvCA,cAAehB,EAAwB,EAAxBA,WACvE,OACE,kBAAC,EAAD,KACE,kBAAC,GAAD,CAAagB,cAAeA,IAC5B,kBAAC,GAAD,CACE7E,MAAOA,EACP0E,aAAcA,EACdb,WAAYA,EACZc,aAAcA,M,qqCCnBtBK,iBAAO,mBCEY,WAAO,IAAD,KCHW,SAAC9D,GAAyC,IAA5B+D,EAA2B,uDAAP,GAC9DC,EAAuB,WAC3B,OAAOC,KAAKC,MAAMC,aAAaC,QAAQpE,IAAQiE,KAAKI,UAAUN,KAFW,EAKjDhD,mBAAiBiD,KALgC,SAKpEM,EALoE,KAK7DC,EAL6D,KAW3E,OAJAnD,qBAAU,WACR+C,aAAaK,QAAQ,QAASP,KAAKI,UAAUC,MAC5C,CAACA,IAEG,CAACA,EAAOC,GDPWE,CAAqB,SADxB,GAChB3F,EADgB,KACT4F,EADS,UAGK3D,mBAAS,OAHd,GAGhB9B,EAHgB,KAGR0F,EAHQ,KAmCjBC,EAAiB,SAACC,GACtBH,GAAS,SAAC1B,GAOR,OANiB,GAAIA,GAAWlD,KAAI,gBAAG0C,EAAH,EAAGA,GAAI3C,EAAP,EAAOA,MAAP,MAAoB,CACtDX,UAAW2F,EACXrC,KACA3C,gBAwCAiF,EAXc,SAAChG,EAAeG,GAClC,OAAQA,GACN,IAAK,SACH,OAAOH,EAAMG,QAAO,SAACuB,GAAD,OAAWA,EAAKtB,aACtC,IAAK,YACH,OAAOJ,EAAMG,QAAO,SAACuB,GAAD,OAAUA,EAAKtB,aACrC,QACE,OAAOJ,GAISiG,CAAYjG,EAAOG,GAEzC,OACE,oCACE,kBAACf,EAAD,MACA,kBAAC,EAAD,CAAQ4C,UAhFU,SAACkE,GACrB,IAAMxE,EAAa,CACjBgC,GAAI1D,EAAMK,OAAS,EACnBU,MAAOmF,EACP9F,WAAW,GAGbwF,GAAS,SAAC1B,GAAD,mBAAmBA,GAAnB,CAA8BxC,UA0EpC1B,EAAMK,OAAS,GACd,oCACE,kBAAC,GAAD,CACEL,MAAOgG,EACPtB,aA3Ee,SAAChB,GACxBkC,GAAS,SAAC1B,GACR,IAAMlE,EAAK,GAAOkE,GACZE,EAAQpE,EAAMqE,WAAU,SAAC3C,GAAD,OAAUA,EAAKgC,KAAOA,KAC9ChC,E,kWAAI,IAAQ1B,EAAMoE,IAKxB,OAHA1C,EAAKtB,WAAasB,EAAKtB,UACvBJ,EAAMoE,GAAS1C,EAER1B,MAmED2E,aA/De,SAACjB,GACxBkC,GAAS,SAAC1B,GAER,OADsBA,EAAU/D,QAAO,SAACuB,GAAD,OAAUA,EAAKgC,KAAOA,SA8DvDmB,cA7CiB,WACzB,IAAMsB,EAAiBnG,EAAMoG,OAAM,SAAC1E,GAAD,OAA6B,IAAnBA,EAAKtB,aAGhD0F,GAAgBK,IA0CVtC,WAAY+B,IAEd,kBAAC,EAAD,CACE5F,MAAOgG,EACP7F,OAAQA,EACRT,iBAzCmB,WAC3BkG,GAAS,SAAC1B,GAER,OADyBA,EAAU/D,QAAO,SAACuB,GAAD,OAAWA,EAAKtB,iBAwCpDQ,eAnCiB,SAACQ,EAA4CjB,GACtEiB,EAAMsB,iBACNmD,EAAU1F,UDpEP,MAASkG,SAASC,eAAe,W","file":"static/js/main.46e9d1b0.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport const GlobalStyles = createGlobalStyle`\n  /* Box sizing rules */\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n  }\n\n  /* Remove default padding */\n  ul[class],\n  ol[class] {\n    padding: 0;\n  }\n\n  /* Remove default margin */\n  body,\n  h1,\n  h2,\n  h3,\n  h4,\n  p,\n  ul[class],\n  ol[class],\n  li,\n  figure,\n  figcaption,\n  blockquote,\n  dl,\n  dd {\n    margin: 0;\n  }\n\n  /* Set core body defaults */\n  body {\n    min-height: 100vh;\n    scroll-behavior: smooth;\n    text-rendering: optimizeSpeed;\n    line-height: 1.5;\n  }\n\n  /* Remove list styles on ul, ol elements with a class attribute */\n  ul[class],\n  ol[class] {\n    list-style: none;\n  }\n\n  /* A elements that don't have a class get default styles */\n  a:not([class]) {\n    text-decoration-skip-ink: auto;\n  }\n\n  /* Make images easier to work with */\n  img {\n    max-width: 100%;\n    display: block;\n  }\n\n  /* Natural flow and rhythm in articles by default */\n  article > * + * {\n    margin-top: 1em;\n  }\n\n  /* Inherit fonts for inputs and buttons */\n  input,\n  button,\n  textarea,\n  select {\n    font: inherit;\n  }\n\n  /* Remove all animations and transitions for people that prefer not to see them */\n  @media (prefers-reduced-motion: reduce) {\n    * {\n      animation-duration: 0.01ms !important;\n      animation-iteration-count: 1 !important;\n      transition-duration: 0.01ms !important;\n      scroll-behavior: auto !important;\n    }\n  }\n\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,500,700&display=swap&subset=cyrillic');\n\n  #root {\n    position: relative;\n    margin: 130px 0 40px;\n    background: #fff;\n    box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.2), 0 25px 50px 0 rgba(0, 0, 0, 0.1);\n  }\n\n  html {\n    font-size: 14px;\n  }\n\n  body {\n    font-family: Roboto, Arial, sans-serif;\n    font-size: 1rem;\n    font-weight: 400;\n    line-height: 1.4em;\n    min-width: 230px;\n    max-width: 550px;\n    margin: 0 auto;\n    background: #f5f5f5;\n    color: #4d4d4d;\n  }\n\n  p {\n    line-height: 1;\n  }\n\n  strong {\n    font-weight: 400;\n  }\n\n  a {\n    color: inherit;\n    margin: 0.21rem;\n    border: 1px solid transparent;\n    padding: 0.21rem 0.5rem;\n    text-decoration: none;\n    border-top-color: transparent;\n    border-right-color: transparent;\n    border-bottom-color: transparent;\n    border-left-color: transparent;\n    border-radius: 3px;\n  }\n\n  a:hover {\n    border-color: rgba(255, 41, 5, 0.29);\n  }\n\n  button {\n    margin: 0;\n    border: 0;\n    padding: 0;\n    background: none;\n    font-size: 100%;\n    vertical-align: baseline;\n    font-family: inherit;\n    font-weight: inherit;\n    color: inherit;\n    appearance: none;\n  }\n\n  ul,\n  li {\n    margin: 0;\n    padding: 0;\n    list-style: none;\n  }\n\n  .info {\n    margin-top: 4.6rem;\n    margin-right: auto;\n    margin-bottom: 0;\n    margin-left: auto;\n    font-size: 0.75rem;\n    color: #bfbfbf;\n    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.5);\n    text-align: center;\n  }\n`\n","import styled from 'styled-components'\n\nexport const Button = styled.button`\n  float: right;\n  position: relative;\n  line-height: 20px;\n  text-decoration: none;\n  cursor: pointer;\n\n  :hover {\n    text-decoration: underline;\n  }\n`\n","import React from 'react'\n\nimport { Button } from './styles'\n\ninterface Props {\n  onClearCompleted(): void\n}\n\nexport const ClearButton = ({ onClearCompleted }: Props) => (\n  <Button type=\"button\" onClick={onClearCompleted}>\n    Clear completed\n  </Button>\n)\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.span`\n  float: left;\n  text-align: left;\n`\n","import React, { useMemo } from 'react'\n\nimport { Wrapper } from './styles'\nimport { Todo } from '../../lib/types'\n\ninterface Props {\n  todos: Todo[]\n}\n\nexport const Counter = ({ todos }: Props) => {\n  const count = useMemo(() => todos.filter(({ completed }) => !completed).length, [todos])\n\n  return (\n    <Wrapper>\n      <strong>{count}</strong>\n      <span>&nbsp;</span>\n      <span>{count > 1 ? 'items' : 'item'}</span>\n      <span>&nbsp;</span>\n      <span>left</span>\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.ul`\n  position: absolute;\n  right: 0;\n  left: 0;\n`\n\nexport const Filter = styled.li`\n  display: inline;\n`\n\nexport const SelectedAnchor = styled.a`\n  margin: 0.21rem;\n  border: 1px solid transparent;\n  padding: 0.21rem 0.5rem;\n  border-radius: 3px;\n  border-color: rgba(255, 41, 5, 0.29);\n  background-color: transparent;\n  color: inherit;\n  text-decoration: none;\n`\n","import React from 'react'\n\nimport { SelectedAnchor, Filter, Wrapper } from './styles'\n\ninterface Props {\n  filter: string\n  onFilterChange(event: React.MouseEvent<HTMLAnchorElement>, filter: string): void\n}\n\nexport const Filters = ({ filter, onFilterChange }: Props) => {\n  const linkTemplates = [\n    { name: 'all', label: 'All' },\n    { name: 'active', label: 'Active' },\n    { name: 'completed', label: 'Completed' }\n  ]\n\n  const links = linkTemplates.map(({ name, label }) => {\n    const isActive = filter === name\n\n    return (\n      <Filter key={name}>\n        {isActive ? (\n          <SelectedAnchor>{label}</SelectedAnchor>\n        ) : (\n          <a href=\"#/\" onClick={(event) => onFilterChange(event, name)}>\n            {label}\n          </a>\n        )}\n      </Filter>\n    )\n  })\n\n  return <Wrapper>{links}</Wrapper>\n}\n","import styled from 'styled-components'\n\nexport const StyledFooter = styled.footer`\n  min-height: 2.93rem;\n  padding: 0.7rem 1.07rem;\n  text-align: center;\n  color: #777;\n  border-top: 1px solid #e6e6e6;\n\n  ::before {\n    content: '';\n    position: absolute;\n    right: 0;\n    bottom: 0;\n    left: 0;\n    height: 3.57rem;\n    overflow: hidden;\n    box-shadow: 0 1px 1px rgba(0, 0, 0, 0.2), 0 8px 0 -3px #f6f6f6,\n      0 9px 1px -3px rgba(0, 0, 0, 0.2), 0 16px 0 -6px #f6f6f6, 0 17px 2px -6px rgba(0, 0, 0, 0.2);\n  }\n`\n","import React from 'react'\n\nimport { StyledFooter } from './styles'\n\nimport { Counter } from '../counter'\nimport { Filters } from '../filters'\nimport { Todo } from '../../lib/types'\nimport { ClearButton } from '../clear-button'\n\ninterface Props {\n  todos: Todo[]\n  filter: string\n  onClearCompleted(): void\n  onFilterChange(event: React.MouseEvent<HTMLAnchorElement>, filter: string): void\n}\n\nexport const Footer = ({ todos, filter, onClearCompleted, onFilterChange }: Props) => {\n  const isTodoCompleted = todos.some((todo) => todo.completed === true)\n\n  return (\n    <StyledFooter>\n      <Counter todos={todos} />\n      <Filters filter={filter} onFilterChange={onFilterChange} />\n      {isTodoCompleted && <ClearButton onClearCompleted={onClearCompleted} />}\n    </StyledFooter>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Title = styled.h1`\n  position: absolute;\n  top: -9.6rem;\n  width: 100%;\n  margin: 4.3rem 0;\n  font-size: 7.1rem;\n  font-weight: 400;\n  text-align: center;\n  color: rgba(138, 24, 24, 0.28);\n`\n","import styled from 'styled-components'\n\nexport const StyledInput = styled.input`\n  position: relative;\n  width: 100%;\n  margin: 0;\n  font-family: inherit;\n  font-size: 1.7rem;\n  font-weight: inherit;\n  line-height: 1.4em;\n  border: none;\n  padding: 1.1rem 1.1rem 1.1rem 4.3rem;\n  color: inherit;\n  background: rgba(0, 0, 0, 0.003);\n  box-shadow: inset 0 -2px 1px rgba(0, 0, 0, 0.03);\n\n  ::placeholder {\n    font-weight: 400;\n    font-style: italic;\n    color: #a6a6a6;\n  }\n`\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport { StyledInput } from './styles'\n\ninterface Props {\n  onAddTodo(value: string): void\n}\n\nexport const TextInput = ({ onAddTodo }: Props) => {\n  const [value, setValue] = useState('')\n\n  const inputRef = useRef<HTMLInputElement | null>(null)\n\n  useEffect(() => {\n    if (inputRef && inputRef.current) {\n      inputRef.current.focus()\n    }\n  }, [])\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault()\n    onAddTodo(value.trim())\n    setValue('')\n  }\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    setValue(value)\n  }\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <StyledInput\n        ref={inputRef}\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        placeholder=\"What needs to be done?\"\n      />\n    </form>\n  )\n}\n","import React from 'react'\n\nimport { Title } from './styles'\nimport { TextInput } from '../text-input'\n\ninterface Props {\n  onAddTodo(value: string): void\n}\n\nexport const Header = ({ onAddTodo }: Props) => {\n  return (\n    <header>\n      <Title>todos</Title>\n      <TextInput onAddTodo={onAddTodo} />\n    </header>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.main`\n  position: relative;\n  border-top: 1px solid #e6e6e6;\n  z-index: 2;\n`\n","import styled, { css } from 'styled-components'\n\ntype Props = {\n  completed: boolean\n}\n\nexport const Button = styled.button`\n  display: none;\n  position: absolute;\n  top: 0;\n  right: 10px;\n  bottom: 0;\n  width: 40px;\n  height: 40px;\n  margin: auto 0;\n  font-size: 30px;\n  color: #cc9a9a;\n  margin-bottom: 11px;\n  transition: color 0.2s ease-out;\n  cursor: pointer;\n\n  ::after {\n    content: '×';\n  }\n`\n\nexport const EditInput = styled.input`\n  display: none;\n  position: relative;\n  margin: 0;\n  width: 100%;\n  font-size: 24px;\n  font-family: inherit;\n  font-weight: inherit;\n  line-height: 1.4em;\n  border: 0;\n  color: inherit;\n  padding: 6px;\n  border: 1px solid #999;\n  box-shadow: inset 0 -1px 5px 0 rgba(0, 0, 0, 0.2);\n  box-sizing: border-box;\n  outline: none;\n`\n\nexport const Wrapper = styled.div`\n  display: block;\n`\n\nexport const Li = styled.li<{ editable: boolean }>`\n  position: relative;\n  font-size: 1.7rem;\n  border-bottom: 1px solid #ededed;\n\n  :hover ${Button} {\n    display: block;\n  }\n\n  :last-child {\n    border-bottom: none;\n  }\n\n  ${({ editable }) =>\n    editable &&\n    css`\n      border-bottom: none;\n      margin-bottom: -1px;\n      padding: 0;\n\n      & ${Wrapper} {\n        display: none;\n      }\n\n      & ${EditInput} {\n        display: block;\n        margin: 0 0 0 43px;\n        width: 506px;\n      }\n    `}\n`\n\nexport const Input = styled.input<Props>`\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: 2.9rem;\n  height: 2.9rem;\n  margin: auto 0;\n  border: none;\n  text-align: center;\n  background: none;\n  opacity: 0;\n\n  &:checked + label,\n  & + label {\n    background-image: ${({ completed }) =>\n      completed &&\n      'url(\"data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23bddad5%22%20stroke-width%3D%223%22/%3E%3Cpath%20fill%3D%22%235dc2af%22%20d%3D%22M72%2025L42%2071%2027%2056l-4%204%2020%2020%2034-52z%22/%3E%3C/svg%3E\")'};\n  }\n`\n\nexport const Label = styled.label<Props>`\n  display: block;\n  line-height: 1.2;\n  padding: 1.07rem 1.07rem 1.07rem 4.3rem;\n  transition: color 0.4s;\n  background-image: url('data:image/svg+xml;utf8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2240%22%20height%3D%2240%22%20viewBox%3D%22-10%20-18%20100%20135%22%3E%3Ccircle%20cx%3D%2250%22%20cy%3D%2250%22%20r%3D%2250%22%20fill%3D%22none%22%20stroke%3D%22%23ededed%22%20stroke-width%3D%223%22/%3E%3C/svg%3E');\n  background-repeat: no-repeat;\n  background-position: center left;\n  word-break: break-all;\n\n  color: ${({ completed }) => completed && '#d9d9d9'};\n  text-decoration: ${({ completed }) => completed && 'line-through'};\n`\n","import React, { useState, useRef, useEffect } from 'react'\n\nimport { Todo } from '../../lib/types'\nimport { Li, Input, Label, Button, EditInput, Wrapper } from './styles'\n\ninterface Props {\n  todo: Todo\n  onClickToggleTodo(id: number): void\n  onClickDeleteTodo(id: number): void\n  onEditTodo: React.Dispatch<React.SetStateAction<any[]>>\n}\n\nconst ESC_KEY = 27\nconst ENTER_KEY = 13\n\nexport const TodoItem = ({\n  todo: { id, label, completed },\n  onClickToggleTodo,\n  onClickDeleteTodo,\n  onEditTodo\n}: Props) => {\n  const [value, setValue] = useState(label)\n  const [editable, setEditable] = useState(false)\n\n  const editInputRef = useRef<HTMLInputElement | null>(null)\n\n  useEffect(() => {\n    if (editInputRef.current && editable) {\n      editInputRef.current.focus()\n    }\n  }, [editable])\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target\n    setValue(value)\n    onEditTodo((prevTodos) => {\n      const newTodos = [...prevTodos]\n      const index = newTodos.findIndex((todo) => todo.id === id)\n      const todo = { ...newTodos[index] }\n      todo.label = value\n      newTodos[index] = todo\n      return newTodos\n    })\n  }\n\n  const handleDoubleClick = () => {\n    setEditable(true)\n  }\n\n  const handleBlur = () => {\n    setEditable(false)\n  }\n\n  const handleKeyDown = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.which === ENTER_KEY || event.which === ESC_KEY) {\n      setEditable(false)\n    }\n  }\n\n  return (\n    <Li editable={editable} onDoubleClick={handleDoubleClick}>\n      <Wrapper>\n        <Input\n          type=\"checkbox\"\n          checked={completed}\n          completed={completed}\n          onChange={() => onClickToggleTodo(id)}\n        />\n        <Label completed={completed}>{label}</Label>\n        <Button type=\"button\" onClick={() => onClickDeleteTodo(id)} />\n      </Wrapper>\n      <EditInput\n        ref={editInputRef}\n        type=\"text\"\n        value={value}\n        onChange={handleChange}\n        onBlur={handleBlur}\n        onKeyDown={handleKeyDown}\n      />\n    </Li>\n  )\n}\n","import React from 'react'\n\nimport { TodoItem } from '../todo-item'\nimport { Todo } from '../../lib/types'\n\ninterface Props {\n  todos: Todo[]\n  onToggleTodo(id: number): void\n  onDeleteTodo(id: number): void\n  onEditTodo: React.Dispatch<React.SetStateAction<any[]>>\n}\n\nexport const TodoList = ({ todos, onToggleTodo, onDeleteTodo, onEditTodo }: Props) => {\n  return (\n    <ul>\n      {todos.map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          onClickToggleTodo={onToggleTodo}\n          onClickDeleteTodo={onDeleteTodo}\n          onEditTodo={onEditTodo}\n        />\n      ))}\n    </ul>\n  )\n}\n","import styled from 'styled-components'\n\nexport const Input = styled.input`\n  position: absolute;\n  text-align: center;\n  border: none;\n  opacity: 0;\n  background: none;\n`\n\nexport const Label = styled.label`\n  position: absolute;\n  top: -3.71rem;\n  left: -0.93rem;\n  width: 4.29rem;\n  height: 2.43rem;\n  font-size: 0;\n  transform: rotate(90deg);\n  cursor: pointer;\n\n  ::before {\n    content: '❯';\n    padding: 0.71rem 1.93rem;\n    font-size: 1.57rem;\n    color: #a6a6a6;\n  }\n`\n","import React from 'react'\n\nimport { Input, Label } from './styles'\n\ninterface Props {\n  onToggleTodos(): void\n}\n\nexport const ToggleInput = ({ onToggleTodos }: Props) => {\n  return (\n    <>\n      <Input id=\"toggle-all\" type=\"checkbox\" onChange={onToggleTodos} />\n      <Label htmlFor=\"toggle-all\" />\n    </>\n  )\n}\n","import React from 'react'\n\nimport { Wrapper } from './styles'\n\nimport { Todo } from '../../lib/types'\nimport { TodoList } from '../todo-list'\nimport { ToggleInput } from '../toggle-input'\n\ninterface Props {\n  todos: Todo[]\n  onToggleTodo(id: number): void\n  onDeleteTodo(id: number): void\n  onToggleTodos(): void\n  onEditTodo: React.Dispatch<React.SetStateAction<any[]>>\n}\n\nexport const Main = ({ todos, onToggleTodo, onDeleteTodo, onToggleTodos, onEditTodo }: Props) => {\n  return (\n    <Wrapper>\n      <ToggleInput onToggleTodos={onToggleTodos} />\n      <TodoList\n        todos={todos}\n        onToggleTodo={onToggleTodo}\n        onEditTodo={onEditTodo}\n        onDeleteTodo={onDeleteTodo}\n      />\n    </Wrapper>\n  )\n}\n","import React from 'react'\nimport { render } from 'react-dom'\n\nimport { App } from './app'\n\nrender(<App />, document.getElementById('root'))\n","import React, { useState } from 'react'\n\nimport { Todo } from './lib/types'\nimport { GlobalStyles } from './global-styles'\nimport { useLocalStorageState } from './hooks'\nimport { Header, Main, Footer } from './components'\n\nexport const App = () => {\n  const [todos, setTodos] = useLocalStorageState('todos')\n\n  const [filter, setFilter] = useState('all')\n\n  const handleAddTodo = (todoText: string) => {\n    const todo: Todo = {\n      id: todos.length + 1,\n      label: todoText,\n      completed: false\n    }\n\n    setTodos((prevTodos) => [...prevTodos, todo])\n  }\n\n  const handleToggleTodo = (id: number) => {\n    setTodos((prevTodos) => {\n      const todos = [...prevTodos]\n      const index = todos.findIndex((todo) => todo.id === id)\n      const todo = { ...todos[index] }\n\n      todo.completed = !todo.completed\n      todos[index] = todo\n\n      return todos\n    })\n  }\n\n  const handleDeleteTodo = (id: number) => {\n    setTodos((prevTodos) => {\n      const filteredTodos = prevTodos.filter((todo) => todo.id !== id)\n      return filteredTodos\n    })\n  }\n\n  const toggleProperty = (isCompleted: boolean) => {\n    setTodos((prevTodos) => {\n      const newTodos = [...prevTodos].map(({ id, label }) => ({\n        completed: isCompleted,\n        id,\n        label\n      }))\n\n      return newTodos\n    })\n  }\n\n  const handlerToggleTodos = () => {\n    const isAllCompleted = todos.every((todo) => todo.completed === true)\n\n    if (isAllCompleted) {\n      toggleProperty(!isAllCompleted)\n    } else {\n      toggleProperty(!isAllCompleted)\n    }\n  }\n\n  const handleClearCompleted = () => {\n    setTodos((prevTodos) => {\n      const uncompletedTodos = prevTodos.filter((todo) => !todo.completed)\n      return uncompletedTodos\n    })\n  }\n\n  const handleFilterChange = (event: React.MouseEvent<HTMLAnchorElement>, filter: string) => {\n    event.preventDefault()\n    setFilter(filter)\n  }\n\n  const filterTodos = (todos: Todo[], filter: string) => {\n    switch (filter) {\n      case 'active':\n        return todos.filter((todo) => !todo.completed)\n      case 'completed':\n        return todos.filter((todo) => todo.completed)\n      default:\n        return todos\n    }\n  }\n\n  const filteredTodos = filterTodos(todos, filter)\n\n  return (\n    <>\n      <GlobalStyles />\n      <Header onAddTodo={handleAddTodo} />\n      {todos.length > 0 && (\n        <>\n          <Main\n            todos={filteredTodos}\n            onToggleTodo={handleToggleTodo}\n            onDeleteTodo={handleDeleteTodo}\n            onToggleTodos={handlerToggleTodos}\n            onEditTodo={setTodos}\n          />\n          <Footer\n            todos={filteredTodos}\n            filter={filter}\n            onClearCompleted={handleClearCompleted}\n            onFilterChange={handleFilterChange}\n          />\n        </>\n      )}\n    </>\n  )\n}\n","import { useState, useEffect } from 'react'\n\nimport { Todo } from '../lib/types'\n\nexport const useLocalStorageState = (key: string, defaultValue: any = []) => {\n  const getLocalStorageState = () => {\n    return JSON.parse(localStorage.getItem(key) || JSON.stringify(defaultValue))\n  }\n\n  const [state, setState] = useState<Todo[]>(getLocalStorageState())\n\n  useEffect(() => {\n    localStorage.setItem('todos', JSON.stringify(state))\n  }, [state])\n\n  return [state, setState] as const\n}\n"],"sourceRoot":""}